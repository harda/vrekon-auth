plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'war'
    id "org.sonarqube" version "2.7"
}

group = 'com.mpc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

bootWar {
    archiveName 'auth.war'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.maven.apache.org/maven2" }
    maven { url "http://maven.springframework.org/release" }
    maven { url "http://repository.jboss.org/nexus/content/groups/public-jboss" }
    maven { url "http://download.oracle.com/maven" }
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.2.1.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.2.1.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.2.1.RELEASE'
    compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.1.1'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'

    runtimeOnly group: 'mysql', name: 'mysql-connector-java', version: '8.0.18'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.integration:spring-integration-test'
}

test {
    useJUnitPlatform()
}
